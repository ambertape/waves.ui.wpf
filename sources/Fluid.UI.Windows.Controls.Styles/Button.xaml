<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:helpers="clr-namespace:Fluid.UI.Windows.Controls.Helpers;assembly=Fluid.UI.Windows.Controls.Helpers">

    <ResourceDictionary.MergedDictionaries>

        <!-- Base control. -->
        <ResourceDictionary Source="pack://application:,,,/Fluid.UI.Windows.Controls.Styles;component/Control.xaml" />

    </ResourceDictionary.MergedDictionaries>

    <!-- Button focus visual style. -->
    <Style x:Key="ButtonFocusVisual">

        <Setter Property="Control.Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Control}">

                    <Border Margin="-1"
                            BorderThickness="1"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding Foreground}"
                            CornerRadius="{DynamicResource StandardCornerRadius}"
                            SnapsToDevicePixels="True"/>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <!-- Base button style.-->
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ControlStyle}">

        <Setter Property="helpers:Control.CornerRadius" Value="{DynamicResource StandardCornerRadius}"/>

        <Setter Property="HorizontalContentAlignment" Value="Center"/>

        <Setter Property="Padding" Value="0" />

        <Setter Property="Background" Value="{DynamicResource Primary-300-Brush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Primary-500-Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>

        <Setter Property="IsTabStop" Value="True"/>

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid>

                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding helpers:Control.CornerRadius}"/>

                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding helpers:Control.CornerRadius}"/>

                        <Border x:Name="HighlightBorder" 
                                Background="{TemplateBinding Foreground}" 
                                CornerRadius="{TemplateBinding helpers:Control.CornerRadius}" 
                                Opacity="0.0"/>

                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                            <!-- Сетка контента кнопки -->
                            <ContentControl x:Name="PART_ContentPresenter"
                                            Margin="{TemplateBinding Padding}"
                                            Content="{TemplateBinding Content}"
                                            Focusable="False"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Foreground="{TemplateBinding Foreground}"
                                            Padding="{TemplateBinding Padding}"
                                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                            IsTabStop="False" />

                        </Grid>

                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource Primary-500-Brush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Primary-700-Brush}" />
                            <Setter Property="Foreground" Value="{DynamicResource Primary-Foreground-900-Brush}" />
                        </Trigger>

                        <!-- Наведение курсора мыши -->
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard TargetName="HighlightBorder">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.125" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <!-- Уведение курсора мыши -->
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard TargetName="HighlightBorder">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <!-- Событие нажатия левой кнопки мыши -->
                        <EventTrigger RoutedEvent="Click">
                            <BeginStoryboard>
                                <Storyboard TargetName="HighlightBorder">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                   AutoReverse="True">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.25" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <!-- Base accent button style. -->
    <Style x:Key="AccentButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle}">

        <Setter Property="Background" Value="{DynamicResource Accent-500-Brush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Accent-700-Brush}"/>
        <Setter Property="Foreground" Value="{DynamicResource Accent-Foreground-100-Brush}"/>

    </Style>

    <!-- Window tool bar button style (for example, minimize, maximize and close). -->
    <Style x:Key="WindowToolBarButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle}">

        <Setter Property="MinWidth" Value="36"/>
        <Setter Property="MinHeight" Value="36"/>

        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Primary-Foreground-100-Brush}"/>

    </Style>

</ResourceDictionary>