<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Fluid.UI.Styles.Controls">

    <ResourceDictionary.MergedDictionaries>

        <!-- Кнопка -->
        <ResourceDictionary Source="pack://application:,,,/Fluid.UI;component/Styles/Controls/ToggleButton.xaml" />

        <!-- Основной контрол -->
        <ResourceDictionary Source="pack://application:,,,/Fluid.UI;component/Styles/Controls/Control.xaml" />

    </ResourceDictionary.MergedDictionaries>

    <!-- Элемент комбобокса -->
    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource ControlStyle}">

        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="36" />

        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />

        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="Padding" Value="12 6 12 6" />

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="ComboBoxItem">

                    <Grid Background="{TemplateBinding Background}">

                        <Border x:Name="ItemBackground"
                                Background="Transparent"
                                TextElement.Foreground="Transparent"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                IsHitTestVisible="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <Grid>

                            <Canvas x:Name="HighlightCanvas" Background="{TemplateBinding Foreground}"
                                    Opacity="0.0625" Visibility="Collapsed" />

                            <ContentPresenter x:Name="ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextElement.Foreground="{TemplateBinding Foreground}"/>

                        </Grid>


                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="HighlightCanvas" Value="Visible" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <!--<Setter TargetName="ContentPresenter" Property="TextElement.Foreground"
                                    Value="{DynamicResource PrimaryForegroundBrush1}" />
                            <Setter TargetName="ItemBackground" Property="Background"
                                    Value="{DynamicResource PrimaryBrush1}" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <!-- Основное описание комбобокса-->
    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ControlStyle}">

        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />

        <Setter Property="Height" Value="36" />
        <Setter Property="Width" Value="Auto" />

        <Setter Property="IsTabStop" Value="True"/>

        <Setter Property="Background" Value="{StaticResource Primary-100-Brush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Primary-700-Brush}"/>

        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="{StaticResource StandardThickness}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type ComboBox}">

                    <Grid x:Name="MainGrid">

                        <Border Background="{TemplateBinding Background}" Opacity="1" CornerRadius="{StaticResource StandardCornerRadius}" />
                        <Border Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource StandardCornerRadius}" />

                        <Border x:Name="HighlightBorder" Background="{TemplateBinding Foreground}" Opacity="0.0"
                                CornerRadius="{StaticResource StandardCornerRadius}" />

                        <Grid>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="TextColumn" Width="*" />
                                    <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Grid Grid.Column="0">

                                    <!-- ContentPresenter -->
                                    <ContentPresenter x:Name="ContentSite"
                                                      IsHitTestVisible="False"
                                                      Content="{TemplateBinding SelectionBoxItem}"
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                      Margin="{TemplateBinding Padding}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                                    <!-- EditableTextBox -->
                                    <TextBox x:Name="PART_EditableTextBox"
                                             Style="{DynamicResource LanComboBoxTextBoxStyle}"
                                             HorizontalAlignment="Left"
                                             VerticalAlignment="Center"
                                             Margin="0,0,0,0"
                                             Focusable="True"
                                             Background="Transparent"
                                             Visibility="Hidden"
                                             Padding="{TemplateBinding Padding}"
                                             IsReadOnly="{TemplateBinding IsReadOnly}" />

                                </Grid>

                                <Grid Grid.Column="0" Grid.ColumnSpan="2">

                                    <ToggleButton x:Name="PART_DropDownToggle"
                                                  Grid.RowSpan="2"
                                                  Grid.ColumnSpan="3"
                                                  Margin="0,0,6,0"
                                                  Padding="0,-4,0,0"
                                                  Content="{StaticResource Icon-Sort-Down}"
                                                  Style="{StaticResource ComboBoxToggleButtonStyle}"
                                                  Background="{TemplateBinding Background}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  KeyboardNavigation.IsTabStop="False"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                </Grid>

                                <Grid Grid.Column="0" Grid.ColumnSpan="2">

                                    <!-- Popup -->
                                    <Popup x:Name="PART_Popup"
                                           AllowsTransparency="True"
                                           Focusable="False"
                                           Placement="Bottom"
                                           IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                           PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">

                                        <!-- DropDown Grid -->
                                        <Grid x:Name="DropDown"
                                              VerticalAlignment="Stretch"
                                              HorizontalAlignment="Stretch"
                                              MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                              MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">

                                            <Border x:Name="DropDownBorder"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    Background="{TemplateBinding Background}"
                                                    VerticalAlignment="Stretch"
                                                    HorizontalAlignment="Stretch">

                                                <Grid>

                                                    <Border BorderThickness="1" Background="Transparent"
                                                            BorderBrush="{TemplateBinding BorderBrush}" Opacity="0.125"
                                                            CornerRadius="3" />

                                                    <ScrollViewer x:Name="DropDownScrollViewer"
                                                                  SnapsToDevicePixels="True">

                                                        <StackPanel IsItemsHost="True"
                                                                    KeyboardNavigation.DirectionalNavigation="Contained" />

                                                    </ScrollViewer>

                                                </Grid>

                                            </Border>

                                        </Grid>

                                    </Popup>

                                </Grid>

                            </Grid>

                            <!-- VisualStates -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="FocusedDropDown">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                                           Storyboard.TargetName="DropDownBorder"
                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsDropDownOpen"
                                 Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource Accent-500-Brush}"/>
                        </Trigger>

                        <Trigger Property="HasItems"
                                 Value="False">
                            <Setter TargetName="DropDownBorder"
                                    Property="MinHeight"
                                    Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping"
                                 Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="False" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource Primary-500-Brush}" />
                            <Setter Property="BorderBrush" Value="{StaticResource Primary-700-Brush}" />
                            <Setter Property="Foreground" Value="{StaticResource Primary-Foreground-900-Brush}" />
                        </Trigger>

                        <Trigger SourceName="PART_Popup"
                                 Property="AllowsTransparency"
                                 Value="True">

                            <Setter TargetName="DropDownBorder"
                                    Property="CornerRadius"
                                    Value="3" />
                            <Setter TargetName="DropDownBorder"
                                    Property="Margin"
                                    Value="0,2,0,0" />

                        </Trigger>

                        <Trigger Property="IsGrouping"
                                 Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="False" />
                        </Trigger>

                        <!-- Наведение курсора мыши -->
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard TargetName="HighlightBorder">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.0625" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <!-- Уведение курсора мыши -->
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard TargetName="HighlightBorder">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>
    
</ResourceDictionary>